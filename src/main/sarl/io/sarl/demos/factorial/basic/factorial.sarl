package io.sarl.demos.factorial.basic

import io.sarl.core.Behaviors
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging

event Factorial {
	var number : Long
	var value : Long
} 

agent FactorialAgent {

	var upto : Long = 5l 
	uses Lifecycle, Behaviors, Logging 

	  
	on Initialize {
		if (occurrence.parameters.length > 0) {
			this.upto  = new Long(occurrence.parameters.get(0) as String) 
			info("Received Calculate for " + this.upto)   
			wake(new Factorial => [ number = 0l ; value = 1l ])
		} else {
			info("Bad parameter settings, you must specify an integer value to compute the corresponding factorial")
			killMe
		}
	} 

	on Factorial [ number < upto ] {
		wake(new Factorial => [ number = occurrence.number + 1 ; value = occurrence.value * (occurrence.number+1) ])
	}

	on Factorial [ occurrence.number == upto ] {  
		info("Factorial of " + upto + " is " + occurrence.value)
		killMe
	}
}

