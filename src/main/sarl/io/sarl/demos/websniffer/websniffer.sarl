package io.sarl.demos.websniffer

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.Schedules
import java.util.concurrent.atomic.AtomicInteger

event Count{
	var count : Integer
}

/**
 * This is a companion Agent for the web sniffer demo.
 * It only emits periodic event on the Default Space of Default Context
 */
agent Ticker {
	uses DefaultContextInteractions, Schedules, Logging
	
	val secs : AtomicInteger = new AtomicInteger
	
	on Initialize {
		every(100)[doCount]
	}
	
	def doCount{
		info("Counting : "+ secs.incrementAndGet)
		emit(new Count => [count = secs.get])
	}
	
	def seconds(milis : long) : long{
		milis*1000
	}
	
}